=Системные исключения=
Система Delphinum имеет собственную иерархию исключений. Это необходимо в связи с передачей исключений на уровень представления путем их сериализации в JSON по средствам интерфейса JsonSerializable, реализуемого корневым классом исключений Exception.

Системные исключения образуют иерархию, представленную на следующем изображении:

[[File:Exceptions.png]]

В пакете можно выделить следующие классы исключений:
* DataExceptions - исключения, связанные с целевыми данными скрипта;
* EnvironmentException - исключения, связанные с условиями и средой выполнения скрипта;
* SemanticException - исключения, связанные с семантикой класса и ее нарушением;
* ToolsException - исключения, связанные с конкретными инструментами (базой данных, сетью и т.д.).

=Верификация параметров метода=
Для верификации параметров методов класса можно воспользоваться методом verify класса InvalidArgumentException. Данный метод позволяет проверить тип и диапазон допустимых значений.

Метод принимает три параметра: проверяемые данные, маска типа и допустимый диапазон.

Маска типа включает один или несколько флагов типа. При указании более одного флага, тип проверяемых данных должен соответствовать одному из указанных типов. Допустимы следующие флаги:
* Целочисленные данные (i) - integer;
* Дробные числа (f) - double;
* Строки (s) - string;
* Булевые данные (b) - boolean;
* Объекты (o) - object;
* Ресурсы (r) - resource;
* Null (n) - null;
* Массивы (a, I, F, S, B, O, R, A) - заглавная буква означает массив данных указанного типа. Так флаг I означает массив целочисленных значений.

Допустимый диапазон указывается в виде массива из одного или двух элементов. Первый элемент определяет минимальное значение данных, второй - максимальное. Если второй элемент диапазона не указан, диапазон имеет только нижнюю границу.

Ниже приведен пример использования класса InvalidArgumentException для верификации параметров метода класса:

 public function method($n = null){
   InvalidArgumentException::verify($n, 'ns', [1]); // Параметр должен быть не пустой строкой или null.
   ...
 }
